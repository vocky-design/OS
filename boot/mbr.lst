     1                                  %include "boot.inc"
     2                              <1> ;-----------------------loader-------------------------
     3                              <1> LOADER_START_SECTOR 	equ 0x2
     4                              <1> LOADER_BASE_ADDR 		equ 0x900
     5                              <1> 
     6                              <1> PAGE_DIR_TABLE_POS 		equ 0x100000
     7                              <1> 
     8                              <1> KERNEL_START_SECTOR		equ	0x9
     9                              <1> KERNEL_BIN_BASE_ADDR	equ 0x70000
    10                              <1> 
    11                              <1> KERNEL_ENTRY_POINT		equ	0xc0001500		;需要与ld的-Ttext参数一致。
    12                              <1> ;-----------------------gdt描述符属性------------------
    13                              <1> DESC_G_4K 			equ 		10000000_00000000_00000000b
    14                              <1> DESC_D_32 			equ  		 1000000_00000000_00000000b
    15                              <1> DESC_L_32 			equ   		  000000_00000000_00000000b
    16                              <1> DESC_AVL  			equ    		   00000_00000000_00000000b
    17                              <1> DESC_LIMIT_CODE2 	equ 			1111_00000000_00000000b
    18                              <1> DESC_LIMIT_DATA2 	equ				DESC_LIMIT_CODE2
    19                              <1> DESC_LIMIT_VIDEO2	equ				0000_00000000_00000000b
    20                              <1> DESC_P				equ				     10000000_00000000b
    21                              <1> DESC_DPL_0			equ					  0000000_00000000b
    22                              <1> DESC_DPL_1			equ					  0100000_00000000b
    23                              <1> DESC_DPL_2			equ					  1000000_00000000b
    24                              <1> DESC_DPL_3			equ					  1100000_00000000b
    25                              <1> DESC_S_CODE			equ						10000_00000000b
    26                              <1> DESC_S_DATA			equ						DESC_S_CODE
    27                              <1> DESC_S_SYS			equ						00000_00000000b
    28                              <1> DESC_TYPE_CODE		equ						 1000_00000000b
    29                              <1> DESC_TYPE_DATA      equ						 0010_00000000b
    30                              <1> ;;;;;; 
    31                              <1> DESC_CODE_HIGH4		equ (0x00<<24) + DESC_G_4K + DESC_D_32 + DESC_L_32 + DESC_AVL + 					DESC_LIMIT_CODE2 + DESC_P + DESC_DPL_0 + DESC_S_CODE + 					DESC_TYPE_CODE + 0X00
    32                              <1>                                                                                                                                                                                                                        
    33                              <1> DESC_DATA_HIGH4 	equ (0x00<<24) + DESC_G_4K + DESC_D_32 + DESC_L_32 + DESC_AVL + 					DESC_LIMIT_DATA2 + DESC_P + DESC_DPL_0 + DESC_S_DATA + 					DESC_TYPE_DATA + 0x00
    34                              <1> 
    35                              <1> DESC_VIDEO_HIGH4 	equ (0x00<<24) + DESC_G_4K + DESC_D_32 + DESC_L_32 + DESC_AVL + 					DESC_LIMIT_VIDEO2 + DESC_P + DESC_DPL_0 + DESC_S_DATA + 					DESC_TYPE_DATA + 0x00
    36                              <1> ;-----------------------选择子属性----------------------
    37                              <1> RPL0 	equ 	00b
    38                              <1> RPL1 	equ 	01b
    39                              <1> RPL2 	equ 	10b
    40                              <1> RPL3 	equ 	11b	
    41                              <1> TI_GDT	equ		0_00b
    42                              <1> TI_LDT	equ		1_00b	
    43                              <1> ;-----------------------页表相关属性--------------------
    44                              <1> PG_P	equ		1b
    45                              <1> PG_RW_R	equ		00b
    46                              <1> PG_RW_W	equ		10b
    47                              <1> PG_US_S equ		000b
    48                              <1> PG_US_U	equ		100b
    49                              <1> 
    50                              <1> ;-----------------------ELF文件分析---------------------
    51                              <1> PT_NULL	equ 	0
    52                              <1> 
    53                                  ;主引导程序
    54                                  ;--------------------------------------------------------------------------------
    55                                  SECTION MBR vstart=0x7c00
    56 00000000 8CC8                    	mov ax,cs
    57 00000002 8ED8                    	mov ds,ax
    58 00000004 8EC0                    	mov es,ax
    59 00000006 8ED0                    	mov ss,ax
    60 00000008 8EE0                    	mov fs,ax
    61 0000000A BC007C                  	mov sp,0x7c00
    62 0000000D B800B8                  	mov ax,0xb800
    63 00000010 8EE8                    	mov gs,ax
    64                                  
    65                                  ;利用0x06号功能，上卷全部行，则可清屏
    66                                  ;输入：
    67                                  ;AH 功能号= 0x06
    68                                  ;AL = 上卷的行数（如果是0,则为全部）
    69                                  ;BH = 上卷行属性
    70                                  ;(CL,CH) = 窗口左上角的(X,Y)值
    71                                  ;(DL,DH) = 窗口右下角的(X,Y)值
    72                                  ;无返回值
    73 00000012 B80006                  	mov ax,0x0600
    74 00000015 B707                    	mov bh,0x07
    75 00000017 B90000                  	mov cx,0x0000
    76 0000001A BA4F18                  	mov dx,0x184f
    77 0000001D CD10                    	int 0x10
    78                                  
    79                                  ;打印"1 MBR"
    80 0000001F 65C606000031            	mov byte [gs:0x00],'1'
    81 00000025 65C6060100A4            	mov byte [gs:0x01],0xa4
    82                                  
    83 0000002B 65C606020020            	mov byte [gs:0x02],' '
    84 00000031 65C6060300A4            	mov byte [gs:0x03],0xa4
    85                                  
    86 00000037 65C60604004D            	mov byte [gs:0x04],'M'
    87 0000003D 65C6060500A4            	mov byte [gs:0x05],0xa4
    88                                  
    89 00000043 65C606060042            	mov byte [gs:0x06],'B'
    90 00000049 65C6060700A4            	mov byte [gs:0x07],0xa4
    91                                  
    92 0000004F 65C606080052            	mov byte [gs:0x08],'R'
    93 00000055 65C6060900A4            	mov byte [gs:0x09],0xa4
    94                                  
    95                                  ;-----------------读入LOADER---------------------------
    96                                  
    97 0000005B 66B802000000            	mov eax,LOADER_START_SECTOR
    98 00000061 BB0009                  	mov bx,LOADER_BASE_ADDR
    99 00000064 B104                    	mov cl,4					;待读入的扇区数
   100 00000066 E80300                  	call rd_disk_m_16
   101                                  
   102 00000069 E9(000C)                	jmp LOADER_BASE_ADDR+0x300	;跳转到loader.S的loader_start
   103                                  
   104                                  ;------------------------------------------------
   105                                  ;功能：读取硬盘n个扇区
   106                                  ;输入：eax,bx,cl
   107                                  rd_disk_m_16:
   108                                  ;------------------------------------------------
   109 0000006C 88CD                    	mov ch,cl
   110 0000006E 6689C6                  	mov esi,eax
   111                                  ;第一步：设置要读取的扇区数
   112 00000071 BAF201                   	mov dx,0x1f2
   113 00000074 88C8                    	mov al,cl
   114 00000076 EE                      	out dx,al
   115                                  
   116 00000077 6689F0                  	mov eax,esi
   117                                  ;第二步：将LBA地址存入0x1f3-0x1f6
   118 0000007A BAF301                  	mov dx,0x1f3
   119 0000007D EE                      	out dx,al
   120                                  
   121 0000007E B108                    	mov cl,8
   122                                  
   123 00000080 66D3E8                  	shr eax,cl
   124 00000083 BAF401                  	mov dx,0x1f4
   125 00000086 EE                      	out dx,al
   126                                  
   127 00000087 66D3E8                  	shr eax,cl
   128 0000008A BAF501                  	mov dx,0x1f5
   129 0000008D EE                      	out dx,al
   130                                  
   131 0000008E 66D3E8                  	shr eax,cl
   132 00000091 240F                    	and al,0x0f
   133 00000093 0CE0                    	or  al,0xe0					;设置7-4位为1110,表示lba模式,主盘。
   134 00000095 BAF601                  	mov dx,0x1f6				
   135 00000098 EE                      	out dx,al
   136                                  ;第三步：向0x1f7端口写入读命令，0x20
   137 00000099 BAF701                  	mov dx,0x1f7
   138 0000009C B020                    	mov al,0x20
   139 0000009E EE                      	out dx,al
   140                                  ;第四步：检测硬盘状态
   141                                  .not_ready:
   142 0000009F 90                      	nop
   143 000000A0 EC                      	in al,dx
   144 000000A1 2488                    	and al,0x88
   145 000000A3 3C08                    	cmp al,0x08
   146 000000A5 75F8                    	jnz .not_ready
   147                                  ;第五步：从0x1f0端口读数据
   148 000000A7 88E8                    	mov al,ch
   149 000000A9 B400                    	mov ah,0
   150 000000AB BA0001                  	mov dx,256					;每次读入2个字节，所以一个扇区512字节需要读次数512/2=256
   151 000000AE F7E2                    	mul dx,
   152 000000B0 89C1                    	mov cx,ax		
   153                                  		
   154 000000B2 BAF001                  	mov dx,0x1f0
   155                                  .on_read:
   156 000000B5 ED                      	in ax,dx
   157 000000B6 8907                    	mov [bx],ax
   158 000000B8 83C302                  	add bx,2
   159 000000BB E2F8                    	loop .on_read
   160                                  
   161 000000BD C3                      	ret
   162                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;
   163 000000BE 00<rept>                	times 510-($-$$) db 0
   164 000001FE 55AA                    	db 0x55,0xaa
   165                                  
   166                                  
   167                                  
